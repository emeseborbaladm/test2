# Your task is to implement a confidence interval calculation function that inputs a python list or an R vector. You have 60 minutes to complete this task.
# Although you are allowed to use any packages, we would like you to implement the confidence interval, the mean, and the standard deviation yourself. 
# The function should return 95% or 90% confidence interval depended on a parameter.

# I. task ---------------------------------------------------------------------------------------------------------
# Calculating confidence interval for normal distribution:

# setting parameters ----
p_mean=50
p_sd=5
p_size=100
p_confidence= c(0.99,0.95)

# creating function ----
ci <- function (mean,sd,size,confidence)
{
rigth=mean+qnorm(1-(1-confidence)/2)*sd/sqrt(size)
left=mean-qnorm(1-(1-confidence)/2)*sd/sqrt(size)
paste0("The true mean has a probability of ", confidence*100,"% of being in the interval between ",round(left,2)," and ",round(rigth,2))
}

# try function ----
ci(mean=p_mean,sd=p_sd,size=p_size,confidence=p_confidence)

# II. task ---------------------------------------------------------------------------------------------------------
# The second part of your task is to apply your function to a list that you see below. 
# We give you the R and python snippet to create the list/vector. As an output just print the results to the console

# As I created a function for calculating confidence interval for a mean in case of normal distribution, it is not correct to use it for uniform distribution, but not totally useless. 
# If I did not know the parameters (or distribution) of this vector, this function could be an approximaiton. 

# creating vector ----
set.seed(123)
vec <- runif(8999, 0.0, 1.0)

# setting parameters
p_mean=mean(vec)
p_sd=sd(vec)
p_size=length(vec)
p_confidence= c(0.99,0.95)

# calculating confidence intervals ----
ci(mean=p_mean,sd=p_sd,size=p_size,confidence=p_confidence)


